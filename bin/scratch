#!/usr/bin/env bash

# Toggle a scratch terminal window. A scratch terminal is a disposable terminal
# for one-off, quick commands that don't warrant a dedicated terminal.
#
# First check if the $TERMINAL env is set; then check for binary

SCRID=scratch
CMD=${1:-'tmux new-session -A -s scratch -n scratch'}
focused=$(xdotool getactivewindow)
scratch=$(xdotool search --onlyvisible --classname $SCRID)
# XXX: This only works if Xresouces is set (sets the font)
FONT=$(xrdb -query | grep 'scratch\.font' | cut -f2)

# use one single quotes here. eval "${term_cmd}" will expand $term_cmd including
# "${CMD}". Ie. it is important to run (notice "" around the shell command)
# alacritty -e $SHELL -c "tmux new-session -A -s scratch -n scratch"
# to ensure -s and -n are seen as parameters to tmux and not $SHELL
# A cleaner way would be to drop eval and write the commands in each elif, see
# previous git commits
ALACRITTY_CMD='alacritty -t "${SCRID}" --class "${SCRID}" -e $SHELL -c "${CMD}"'
URXVT_CMD='urxvt -name $SCRID -e $SHELL -c "${CMD}"'
XST_CMD='xst -t $SCRID -n $SCRID -c $SCRID -f $FONT -e $SHELL -c $CMD'

if [[ -n $scratch ]]; then
    if [[ $focused == $scratch ]]; then
        xdotool windowkill $scratch
    else
        xdotool windowactivate $scratch
    fi
elif [[ ! -z "${TERMINAL}" ]]; then
    if [[ "${TERMINAL}" == "alacritty" ]]; then
        eval "${ALACRITTY_CMD}"
    elif [[ "${TERMINAL}" == "urxvt" ]]; then
        eval "${URXVT_CMD}"
    elif  [[ "${TERMINAL}" == "xst" ]]; then
        eval "${XST_CMD}"
    fi
elif command -v alacritty >/dev/null; then
        eval "${ALACRITTY_CMD}"
elif command -v xst >/dev/null; then
        eval "${XST_CMD}"
elif command -v urxvt >/dev/null; then
        eval "${URXVT_CMD}"
else
    >&2 echo "TERMINAL env is not set and no binary is found"
    exit 1
fi
